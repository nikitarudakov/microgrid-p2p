// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: competition.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceWindow_Weekday int32

const (
	ServiceWindow_UNKNOWN ServiceWindow_Weekday = 0
	ServiceWindow_MON     ServiceWindow_Weekday = 1
	ServiceWindow_TUE     ServiceWindow_Weekday = 2
	ServiceWindow_WED     ServiceWindow_Weekday = 3
	ServiceWindow_THU     ServiceWindow_Weekday = 4
	ServiceWindow_FRI     ServiceWindow_Weekday = 5
	ServiceWindow_SAT     ServiceWindow_Weekday = 6
	ServiceWindow_SUN     ServiceWindow_Weekday = 7
)

// Enum value maps for ServiceWindow_Weekday.
var (
	ServiceWindow_Weekday_name = map[int32]string{
		0: "UNKNOWN",
		1: "MON",
		2: "TUE",
		3: "WED",
		4: "THU",
		5: "FRI",
		6: "SAT",
		7: "SUN",
	}
	ServiceWindow_Weekday_value = map[string]int32{
		"UNKNOWN": 0,
		"MON":     1,
		"TUE":     2,
		"WED":     3,
		"THU":     4,
		"FRI":     5,
		"SAT":     6,
		"SUN":     7,
	}
)

func (x ServiceWindow_Weekday) Enum() *ServiceWindow_Weekday {
	p := new(ServiceWindow_Weekday)
	*p = x
	return p
}

func (x ServiceWindow_Weekday) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceWindow_Weekday) Descriptor() protoreflect.EnumDescriptor {
	return file_competition_proto_enumTypes[0].Descriptor()
}

func (ServiceWindow_Weekday) Type() protoreflect.EnumType {
	return &file_competition_proto_enumTypes[0]
}

func (x ServiceWindow_Weekday) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceWindow_Weekday.Descriptor instead.
func (ServiceWindow_Weekday) EnumDescriptor() ([]byte, []int) {
	return file_competition_proto_rawDescGZIP(), []int{0, 0}
}

type Service_Type int32

const (
	Service_UNKNOWN               Service_Type = 0
	Service_CONSUMPTION_TURN_UP   Service_Type = 1
	Service_CONSUMPTION_TURN_DOWN Service_Type = 2
	Service_GENERATION_TURN_UP    Service_Type = 3
	Service_GENERATION_TURN_DOWN  Service_Type = 4
)

// Enum value maps for Service_Type.
var (
	Service_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "CONSUMPTION_TURN_UP",
		2: "CONSUMPTION_TURN_DOWN",
		3: "GENERATION_TURN_UP",
		4: "GENERATION_TURN_DOWN",
	}
	Service_Type_value = map[string]int32{
		"UNKNOWN":               0,
		"CONSUMPTION_TURN_UP":   1,
		"CONSUMPTION_TURN_DOWN": 2,
		"GENERATION_TURN_UP":    3,
		"GENERATION_TURN_DOWN":  4,
	}
)

func (x Service_Type) Enum() *Service_Type {
	p := new(Service_Type)
	*p = x
	return p
}

func (x Service_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_competition_proto_enumTypes[1].Descriptor()
}

func (Service_Type) Type() protoreflect.EnumType {
	return &file_competition_proto_enumTypes[1]
}

func (x Service_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_Type.Descriptor instead.
func (Service_Type) EnumDescriptor() ([]byte, []int) {
	return file_competition_proto_rawDescGZIP(), []int{1, 0}
}

type ServiceWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Days      []ServiceWindow_Weekday `protobuf:"varint,3,rep,packed,name=days,proto3,enum=pb.ServiceWindow_Weekday" json:"days,omitempty"`
}

func (x *ServiceWindow) Reset() {
	*x = ServiceWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceWindow) ProtoMessage() {}

func (x *ServiceWindow) ProtoReflect() protoreflect.Message {
	mi := &file_competition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceWindow.ProtoReflect.Descriptor instead.
func (*ServiceWindow) Descriptor() ([]byte, []int) {
	return file_competition_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceWindow) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ServiceWindow) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ServiceWindow) GetDays() []ServiceWindow_Weekday {
	if x != nil {
		return x.Days
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              Service_Type   `protobuf:"varint,1,opt,name=type,proto3,enum=pb.Service_Type" json:"type,omitempty"`
	ServiceWindow     *ServiceWindow `protobuf:"bytes,2,opt,name=service_window,json=serviceWindow,proto3" json:"service_window,omitempty"`
	MinRuntimeMinutes int32          `protobuf:"varint,3,opt,name=min_runtime_minutes,json=minRuntimeMinutes,proto3" json:"min_runtime_minutes,omitempty"`
	Capacity          float32        `protobuf:"fixed32,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_competition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_competition_proto_rawDescGZIP(), []int{1}
}

func (x *Service) GetType() Service_Type {
	if x != nil {
		return x.Type
	}
	return Service_UNKNOWN
}

func (x *Service) GetServiceWindow() *ServiceWindow {
	if x != nil {
		return x.ServiceWindow
	}
	return nil
}

func (x *Service) GetMinRuntimeMinutes() int32 {
	if x != nil {
		return x.MinRuntimeMinutes
	}
	return 0
}

func (x *Service) GetCapacity() float32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type Competition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizerId string                 `protobuf:"bytes,2,opt,name=organizer_id,json=organizerId,proto3" json:"organizer_id,omitempty"`
	StartTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	MinVoltage  float32                `protobuf:"fixed32,5,opt,name=min_voltage,json=minVoltage,proto3" json:"min_voltage,omitempty"`
	MaxVoltage  float32                `protobuf:"fixed32,6,opt,name=max_voltage,json=maxVoltage,proto3" json:"max_voltage,omitempty"`
	Services    []*Service             `protobuf:"bytes,7,rep,name=services,proto3" json:"services,omitempty"`
	MinBudget   float32                `protobuf:"fixed32,8,opt,name=min_budget,json=minBudget,proto3" json:"min_budget,omitempty"`
	MaxBudget   float32                `protobuf:"fixed32,9,opt,name=max_budget,json=maxBudget,proto3" json:"max_budget,omitempty"`
}

func (x *Competition) Reset() {
	*x = Competition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_competition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Competition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Competition) ProtoMessage() {}

func (x *Competition) ProtoReflect() protoreflect.Message {
	mi := &file_competition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Competition.ProtoReflect.Descriptor instead.
func (*Competition) Descriptor() ([]byte, []int) {
	return file_competition_proto_rawDescGZIP(), []int{2}
}

func (x *Competition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Competition) GetOrganizerId() string {
	if x != nil {
		return x.OrganizerId
	}
	return ""
}

func (x *Competition) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Competition) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Competition) GetMinVoltage() float32 {
	if x != nil {
		return x.MinVoltage
	}
	return 0
}

func (x *Competition) GetMaxVoltage() float32 {
	if x != nil {
		return x.MaxVoltage
	}
	return 0
}

func (x *Competition) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Competition) GetMinBudget() float32 {
	if x != nil {
		return x.MinBudget
	}
	return 0
}

func (x *Competition) GetMaxBudget() float32 {
	if x != nil {
		return x.MaxBudget
	}
	return 0
}

var File_competition_proto protoreflect.FileDescriptor

var file_competition_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x57, 0x65,
	0x65, 0x6b, 0x64, 0x61, 0x79, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x55, 0x0a, 0x07, 0x57,
	0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x55, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x45, 0x44, 0x10, 0x03, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x48, 0x55, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x52, 0x49, 0x10, 0x05,
	0x12, 0x07, 0x0a, 0x03, 0x53, 0x41, 0x54, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x55, 0x4e,
	0x10, 0x07, 0x22, 0xb0, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x2e,
	0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x79, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x55, 0x52, 0x4e, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x53,
	0x55, 0x4d, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x44, 0x4f, 0x57,
	0x4e, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x55, 0x50, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x04, 0x22, 0xdb, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69,
	0x6e, 0x5f, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x78, 0x5f, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x6d, 0x61, 0x78, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x42, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x32, 0x50, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x13,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_competition_proto_rawDescOnce sync.Once
	file_competition_proto_rawDescData = file_competition_proto_rawDesc
)

func file_competition_proto_rawDescGZIP() []byte {
	file_competition_proto_rawDescOnce.Do(func() {
		file_competition_proto_rawDescData = protoimpl.X.CompressGZIP(file_competition_proto_rawDescData)
	})
	return file_competition_proto_rawDescData
}

var file_competition_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_competition_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_competition_proto_goTypes = []interface{}{
	(ServiceWindow_Weekday)(0),    // 0: pb.ServiceWindow.Weekday
	(Service_Type)(0),             // 1: pb.Service.Type
	(*ServiceWindow)(nil),         // 2: pb.ServiceWindow
	(*Service)(nil),               // 3: pb.Service
	(*Competition)(nil),           // 4: pb.Competition
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_competition_proto_depIdxs = []int32{
	5, // 0: pb.ServiceWindow.start_time:type_name -> google.protobuf.Timestamp
	5, // 1: pb.ServiceWindow.end_time:type_name -> google.protobuf.Timestamp
	0, // 2: pb.ServiceWindow.days:type_name -> pb.ServiceWindow.Weekday
	1, // 3: pb.Service.type:type_name -> pb.Service.Type
	2, // 4: pb.Service.service_window:type_name -> pb.ServiceWindow
	5, // 5: pb.Competition.start_time:type_name -> google.protobuf.Timestamp
	5, // 6: pb.Competition.end_time:type_name -> google.protobuf.Timestamp
	3, // 7: pb.Competition.services:type_name -> pb.Service
	4, // 8: pb.CompetitionManagement.RegisterCompetition:input_type -> pb.Competition
	4, // 9: pb.CompetitionManagement.RegisterCompetition:output_type -> pb.Competition
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_competition_proto_init() }
func file_competition_proto_init() {
	if File_competition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_competition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_competition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Competition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_competition_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_competition_proto_goTypes,
		DependencyIndexes: file_competition_proto_depIdxs,
		EnumInfos:         file_competition_proto_enumTypes,
		MessageInfos:      file_competition_proto_msgTypes,
	}.Build()
	File_competition_proto = out.File
	file_competition_proto_rawDesc = nil
	file_competition_proto_goTypes = nil
	file_competition_proto_depIdxs = nil
}
