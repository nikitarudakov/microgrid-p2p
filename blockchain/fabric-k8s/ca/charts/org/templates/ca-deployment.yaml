apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image }}
          ports:
            - containerPort: 7054
          env:
            - name: FABRIC_CA_HOME
              value: /etc/hyperledger/fabric-ca-server/organizations/fabric-ca/{{ .Values.namespace }}/org-ca
          args:
            - sh
            - -c
            - |
              echo "üîÅ Waiting for TLS key to be available..."
                while [ ! -f /etc/hyperledger/fabric-ca-client/keystore/key.pem ]; do
                echo "‚è≥ key.pem not found, sleeping 2s..."
                sleep 2
                done
              echo "‚úÖ key.pem found, starting Fabric CA server"

              fabric-ca-server start \
                -b {{ .Values.root.user }}:{{ .Values.root.pass }} \
                -n {{ .Values.ca.name }} \
                --csr.hosts {{ .Values.name }}.{{ .Values.namespace }}.svc.cluster.local,localhost \
                --tls.enabled \
                --tls.certfile=/etc/hyperledger/fabric-ca-client/signcerts/cert.pem \
                --tls.keyfile=/etc/hyperledger/fabric-ca-client/keystore/key.pem \
                -d
          volumeMounts:
            - name: ca-data
              mountPath: /etc/hyperledger/fabric-ca-client
              subPath: organizations/{{ .Values.namespace }}.svc.cluster.local/tlsca/{{ .Values.root.user }}/msp
            - name: ca-data
              mountPath: /etc/hyperledger/fabric-ca-server
      volumes:
        - name: ca-data
          persistentVolumeClaim:
            claimName: ca-pvc